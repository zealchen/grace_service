What would you say to coders who are learning how to code right now? This is Thomas, CEO of GitHub, the world's largest platform for developers with over 100 million users. Under his leadership, GitHub co-pilot became the most widely adopted AI coding tool in history. We see big companies put a stop on hiring in 2 years. Do you think I wouldn't need a developer? The idea that AI without any coding skills let you just build a billion dollar business is mistaken because if if that would be the case, everyone would do it.
He led GitHub's $7.5 billion integration with Microsoft. Now he's shaping the future of coding itself. So you're not scared.
The dream of software development was always that I can take the idea that I have in my head on a Sunday morning and by the evening I have the app in the up and running on my phone.
Thanks to HubSpot for sponsoring this video. Hey guys, welcome to Silicon Valley Girl. We're here at Viva Techch in Paris and I have Thomas the CEO of GitHub. I am so excited to talk to you about what's going on in coding. First of all, let's define vibe coding. For everyone who's heard this term and they're like what's what's going on? What's happening? Oo, that's a tough question to start with. I think the you know the loosest interpretation for my side is that vibe coding means you open your IDE you know like like copilot or cursive insert any of these and you go into the agent mode and you give it a task to do and then you're just following along of what the agent proposes to you and you run the commands and you're mostly focused on interacting with the agent and not so much of what the code actually is doing like you're not reviewing the code all the time.
Yeah. And you don't have to learn how to code cuz I tried GitHub copilot.
I was just chatting with it. I'm like create this website do this and then it just tells me where to put the code so it starts working.
So how complicated can the website get with bip coding? Can I build something that has a database or is it just like a landing page or a very simple app? My rule of thumb would be you can get as far as you're having the patience to keep prompting because you know as you said if you don't understand what the agent is actually writing what the code looks like well then your only way of modifying you know the functionality is by figuring out how to problem it almost becomes a a quiz or like a game right like where you're trying to okay so hm let me try a different approach I like to compare this to image models right you start with a simple prompt you render an image of Paris And then almost certainly you get something which isn't exactly what you expected and then you start you know rewriting it and for some time there were like tricks to do that in in stable diffusion and midjourney h by doing things like trending on art station h and then you got closer to what you wanted but at some point you either run into like a direction where you can't keep going anymore or you just take it and you know move it into Photoshop or in in in in the world of copilot into VS code and and now you have to start learning how to code. So I think you can build a web page, you can build authentication, you can build, you know, settings pages and things like that, but you're ultimately always going to reach a point where the complexity uh is is so um deep, I guess, you know, that you have to then understand what the code is actually doing or you're building something and it doesn't scale, you know, and it's super slow and now figuring out a prompt on how to make it fast and know let's say it's a Shopify shop and make it scale for Black Friday that that is when you have to be a professional developer at least you know for now.
So um right now we're using code to do basic things in two years. Do you think I wouldn't need a developer to build a billion dollar company with just by coding or we're still too far away from it? I think you have to be a developer to be in the tech business because what you can do with with just the help of AI not coding everybody else can do as well. And as such your business isn't really differentiated anymore from other businesses, right? Like if I can just prompt it in five minutes and build it myself, what do I need a SAS service that I pay a subscription for, right? And so I think the startups will build in 10x 100x more complex things that they're doing today with the help of AI and as such differentiating from those that are just vibing it. Now, you know, there's lots of businesses where you don't have to code at all, you know, like like your your YouTube channel and there's many other YouTube channels where you can build out a brand and then hire a team to do a lot of these things. But I I think the the idea that AI without any coding skills let you just build a billion dollar business is mistaken because if if that would be the case, everyone would do it and then everybody has a billion dollar company which is which doesn't work, right? Like who's paying the who's paying the money? Exactly. I know a lot of you guys who are watching this are dreaming of becoming tech founders. And with new AI, it's so much easier to build an app or to put your idea into action within 24 hours. And it's becoming crystal clear that AI is not just a tool. It can actually become your co-founder, but the key is how you prompt it. How do you make it think like you? Because the better you are at talking to it, the more powerful it becomes. If you want to get really good at using chat GBT or any AI tool, I highly recommend you check out this ebook that is called Advanced Chat GBT Pro Engineering from Basic to Expert in 7 Days. I put the link in the description to download it for free.
It's basically a step-by-step guide to teach AI think like you. So, instead of just randomly prompting, you build systems that save you time. I especially love two sections. The Roses framework.
It gives you a crystal clear formula for structuring any prompt with the right role, objective, scenario, expected output and steps and modular architecture. It teaches you how to create prompt components you can mix and match like Legos and save hours every week. This book is made by HubSpot Media, which is the sponsor of today's video. And honestly, I wish I had something like that when I just started using AI and started prompting by myself. Now, let's get back to our conversation. Do you think we're going to have less or more developers in 5 years? I think we have going to have way more developers because it's so much easier to learn it. You know, we talked about our kids earlier. Kids can just get into this by using uh co-pilot and then say, "Hey, how do I build a game?" Exactly. Then they see games, you know, when they when they go to school, when they talk to their friends, when they, you know, go to a ski lodge and they have a Nintendo corner. And so naturally, kids when they uh, you know, explore these these technologies, they want to learn it themselves. And so giving them, you know, an agent, a chat tool on the side to say, "Hey, you know, this is how you can learn coding. This is kind of how you can fix your bugs.
This is kind of how you can unblock yourself, right?" Like the most frustrating thing when you're learning something is you're stuck somewhere and then you have nobody at home or in your in your family or friends that can help you with that because they're all nontechnical. So like that's when we when we're saying AI is democratizing access. That's what we mean. Everyone who wants to learn it can learn it. Now that doesn't mean you know everybody who wants to learn coding then becomes a professional software developer right I think there's a much bigger going to be much bigger range between consumer developers that build their own micro apps personalized things you know the trip to Paris app to figure out this is the places we want to see this is all the photos we took and it's only valuable to you and your family or you and your friends all the way to the professional developers that builds all these AI systems all the agents that we see here on the show floor today that I think is still going to be profession and there's going to those the companies that are the smartest are going to hire more developers because if you 10x a single developer then 10 developers can do 100x 100x yeah it feels like we're moving in with the developing we're moving into like what websites used to be 10 years ago when suddenly there are tools like Sarpace and everyone starts having a website so they need designers who are not too technical who have taste so it's something like this right when everyone has an ability to code an app they will still need someone to like take care of it correct and you wouldn't start a business today where you're saying I'm building app web pages for or for small businesses right like every VC would tell you that's that's not differentiated there there is no mode you know that's that's not the next billion dollar business that's why I'm thinking you know AI will generate so much bigger ideas that the same size of team can implement or as you grow your team you can do do even more than those that are just using AI for cost savings it's interesting when we talk about this when I tell this idea to my followers like hey every team can become a lot bigger they can develop They're like, "But who's going to buy? We're still going to have the same amount of people." What do you think about that? I think it's temporary a temporary effect right now that this is the natural conclusion for the short term. We keep things stable and we're trying to figure out how the market develops. But very quickly, I think we're going to see people that say, "Well, wait a second.
If I have one more productive developer, why wouldn't I hire another one and another one?" And in fact, you know, AI has already added more work to the backlogs, right? Like I haven't seen companies saying well we're draining all our backlog and we have almost nothing left and soon enough AI is so powerful that all the ideas are implemented and we're just sitting around doing nothing.
I think the reality is AI you know all these models all these agents you know the path to AGI ultimately means that we have more work to do. I said this morning that I believe 90% of all code is going to be written by agents.
Yeah.
And that sounds like we take away 90% of the work from developers and they're only left with 10%.
But if the total amount of code is growing by 10x, right now the agent has 9x and the developer still has their 1x that they had before.
And so you can keep going with that logic and and you see that you know ultimately those companies are successful that use AI to accelerate not to cut costs. But at the same time, we see big companies uh put a stop put a stop on hiring and they say like, "Hey, you need to their employees, you need to figure out how to do this with AI first before we hire someone." What do you think about that? I think it's a reflection of, you know, a fast changing market and a lot of uncertainty uh both, you know, in the political uh uh environment and in the tech environment of where things are going and the natural tendency to do is to go slower a little bit. Um, and you may might decide, you know, some people are no longer the right folks in my company for that kind of environment where things are moving incredibly fast, where you're almost forced to use AI to keep up with the competition. But like the realization I think that many companies had in the last few months is that if we have employees that say we don't want to use AI, that ultimately means up we as a company are no longer set up for success because our competitors are all using AI or they're mandating AI. And I think this is the transition phase we're going through. But I believe very quickly uh we're going to see uh an acceleration and you already see you know things like Mark Zuckerberg uh uh getting the scale scale AI team.
I I think that shows where Mark's head is and where he believes the future is going to be. He's going he's willing to invest into it.
Yeah. Yeah. What would you say to coders who are learning how to code right now? What should they focus on to be able to get a job? Learn where they are. I think the the biggest upside that young people have is that they are adopting new technology much faster than those that are in in our day-to-day, right? Like when you're in a day-to-day job, you have so much work and you have all your meetings and all the emails and all the things you have to do that you barely have any time to learn. While young people that are still in school or in college have a lot of time to learn. And often, you know, young folks are much more open-minded to explore these and and adopt these new things. It's, you know, when you go to your parents and you're like, oh, you're old because you're listening to all this music from the past or you're still watching linear TV and and and those kind of things. And I think though the the next generation of developers will grow up with AI, they will in the same way that you know the Gen Z has grown up with uh with smartphones. Um while in my generation, I didn't have a smartphone until I was like 20. Well, I didn't have a cell phone until I was like early 20s and then I didn't have a smartphone until I was already my 30s, right? And so I think that's we're going to see a new generation of software developers that for them using an a set of agents is is just going to be natural just and they're going to have that when they're writing an email. They're going to have that when they're planning a trip. Uh they're going to have that on the trip and of course in their work environment uh across you know the coding skills but everything else as well in in professional life.
Do you think everyone should try VIP coding today or you think it's too early for everyone? I think it's about the right time. You know, there's enough tools um and enough AI uh systems like CH GPT and claude that have some form of VIP coding built in. Um OpenAI launch.
You have to copy the code, right? And insert uh not with OpenAI has codeex um which which you know lets you do some of those things uh uh within within the OpenAI environment or chat GBT environment. Uh uh but you're right, there's some tools where you still have to know where to put it and and what a what a GitHub repository even is or what GitHub is for that matter. And then there's technologies like versels with zero uh lovable bold where you can actually get just get started without any technical background. What you also see if you if you follow Reddit threads of people, you know, reporting on their experience is that you do will get stuck, right? That's the nature of this is either you're not asking deep enough or not giving it or you just don't know what to ask, not enough problems.
Uh or then you're probably getting it done, but it looks crappy or it's very simple or you're going really to the to the edge of the technology and then you're going to get stuck if you don't know how to how to go into the source code and make modifications. But yeah, I think Manos is the other one. Manos um who is this Chinese startup that brought this agent to market where you can do VIP coding in the sense of a consumer specifies what they want to build and then it builds you this uh web page or web app right in the chat tool.
So you're not you're not never even launching anything or deploying it or any any of the developer activities. you're just asking it to build you a tracking for your kids's allowance or or the trip to Tokyo or you know those those kind of personalized apps that are only useful your your workout tracker that are only useful for you and where you in the past would have downloaded an app from the app store and now and now you're using uh such an Asentic system.
Interesting. Oh, that's that's fascinating. Do you think we're going to the world where AI can generate better ideas than us? I think AI can help us to generate better ideas because AI is also incredibly powerful for your own reflections like you know putting your notes into into an AI system like JBT and say hey what am I missing or what else could I be thinking about or if you take this and combine it with something else what what could come out of this.
So I think the reasoning capabilities, the chain of thought that that these AI systems have combined with your own ideas, with your triggers, you know, with the things that you, you know, that keep you up at night because you're so excited about this. I think those still come from the human, but the AI is going to help us to explore those to put them into a pitch deck or that's for the next 5 years. Let's talk about AGI. Do you think it's going to be 2030? Depends on depends on how you define AGI. So I have to define AGI.
AGI for you? I don't know. I think you know the the arguments are on both sides. On the one side you could say the models that are powering these AI agents today are already more intelligent than what you and I could do. Certainly in terms of how much knowledge they have stored um uh uh you know how they can reason over this knowledge. How they even you know can summarize things in in such a short amount of time. You couldn't read you know a 500page book and summarize it. So they are more intelligent or more capable and they've also seen all of the ideas but they're not creative. I think emotion plays a big role in in in creativity. Um you know and they have no emotion. Even Mr. Data and Star Trek had no emotion either. And uh they're not sentient. And I think if you define AGI or ASI as that I I don't know how long it will take because we haven't seen any research of how you can implement emotion within with an AI system. And so we're going to be on a journey. Um, you know, Whimo in San Francisco is is fascinating what it is. Um, well, now it's it's coming to more cities. Um, self-driving cars, you know, feel like AGIS. Um, I think VIP coding to some degree feels like AGI. Um, but if you define AGI as in it needs to have this human instinct and the human, you know, collaboration and the the idea in the morning of doing something completely new. I don't know how far away we are from this. It's certainly not tomorrow.
Okay. So, you're not scared or are you like I'm excited.
What's your level of So, you're not scared at all.
I'm not scared at all. Like, you know, as long as I need still need to remind my kids three times to empty the dishwasher.
As long as there is no robot that can actually do that. Not even a prototype.
It's coming soon still. Like, um there are already robots walking in Silicon Valley like the Oh, but like they cannot really take a plate out of the craziness. That's the dishwasher. I'm seeing the progress how fast it happens and I'm not even like what do you teach your kids what do you tell them like what are they going to be when they grow up what are the skills they need to acquire now no I grew up in uh East Germany before the war fell and I was 12 years old when Germany got reunited and I tell them look you know you're growing up in one of the most exciting times that I have you know seen in my in my life and there's so much technology around you you can build a company today not only out of a garage in Silicon Valley you can build a company out of garage anywhere in the world. Uh because all you need is, you know, a good internet connection, a laptop or even a cell phone and a developer and a bit of VIP coding. Well, but you can become a developer if you want to. Everybody can now become the developer. They don't have to get access to books and magazines and and and a computer club that's only in their town uh or what have you. And so I think from a software developer perspective, it is it is the most exciting time that developers have lived in because the dream of software development was always that I can take the idea that I have in my head on a Sunday morning and by the evening I have the app in the up and running on my phone, right? And the reality today is I have the idea and then I'm trying to figure out how do I take this problem and convert it into source code and libraries and you know how do I make rounded corners on on an iPhone app and and and those things and by by the time it's night I haven't done anything. I have basically bootstrapped the project you know and set up a few things and that was it.
Yeah. So basically what what what are you teaching your kids entrepreneurship? I'm teaching them to explore the world.
I'm teaching them, you know, to how to solve problems on their own. I'm teaching them or they're teaching themselves how to use AI and um and I think, you know, be curious and open-minded.
I feel like you're one of the most positive people I interviewed about AI because a lot of people are like, I'm not sure probably 90% of the shop are going to be gone, but you're and I'm German and you're German. So, it's very it gives me hope. Um what would be like the last advice you would give to people who are watching and who still have fear that AI is going to take their job? Well, I think the best fear uh the best way to work around the fear that you have around your job is to adopt the technology, learn about it, learn how to use it, to up upskill yourself into whatever the next job is going to be. you know, if if you fear that your job is going to be replaced um because AI can do it, uh then the best path out of that is to become the expert in using this AI system because there's all I think there's always going to be a human that orchestrates that you know is the conductor of all these AI agents.
Okay.
So you don't see the future where AI spots the problem, generates solution codes. Well, look, you know, there's reasons why we do responsible AI, why we do, you know, where we test every model, why there's security guard rails, red teaming, all like, you know, teams trying to hack the model, uh, figuring out what the system prompt is, doing prompt injection, that is certainly things that we need to work on in the same way that we need to work on software security and traffic safety and every technology that we have in life has risks and and rewards and I think we should focus focus on the rewards when we want predict what the future is and we should work on the risks on on our day-to-day and make sure that the risks don't materialize.
Okay. So, your favorite let's do top three favorite AI apps.
Well, of course, Copilot is my number one as we're working on this.
You use it internally as well to code the code. Yeah.
Yeah. Everybody at GitHub, not even not only the coders, everybody is using C-pilot. So, in product managers, designers, HR, legal, finance, everybody is using GitHub. Um that's the nature of GitHub is that everybody is on GitHub. um and is on copilot. Um I really love you know chat GPT for like my day-to-day you know other questions.
Um um I have it on my Mac on you know control space and it just opens the toolbar and I think more and more replacing the typical internet search.
Sure.
And um h what's the third AI system that's my favorite? I have a you know certain granola for example on my app to transcribe uh calls.
Um so that comes to mind. And um I I I find that really useful for example for interviews. I think it's uh important to call it out to the person you're talking to that you're you know transcribing the call and having AI uh write a summary.
Um but it's those things and then obviously you know as I'm not very creative in terms of painting and so having you know uh uh one of these models create an image for me for for for PowerPoint presentation uh I find that super useful as well.
That's awesome. Thank you so much for being so positive about the future for this conversation. Thank you.