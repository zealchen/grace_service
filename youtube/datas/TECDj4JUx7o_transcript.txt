People have strong reactions when they think, "Oh, the job that I do or my friends do uh might go away." But if you look backwards at history, the first computer programmers that existed, they didn't do a job that was anywhere like today's software engineers. These tools give high agency individual superpowers.
So if you are a potential founder thinking about starting something, I don't think there's been any point in history that's been better than today for starting an idea because you can just do so much more than you would have been able to even last [Music] year. Welcome back to another episode of the breakdown. Today we're going to talk about recent advances in AI, specifically coding agents, and how they might change the future of how we do work. Tom, you wrote some tweets recently. Annoyed some people. Tell us about that. Yeah, you know, like any good uh tweets optimized for engagement, they upset a lot of people. I put this tweet out which basically compared software engineers to kind of highly paid organic farmers, basically tending their crops by hand. And I suggested there was a a technological revolution coming, the combine harvester. And as a result of the combined harvester, you know, humanity produced way more food but employed way fewer farmers. And I suggested that something similar was going to happen in in software engineering. And this upset a lot of people uh particularly in in certain software engineering circles, it was not highly regarded. I think that's fair to say. But I followed up with a longer blog post where I tried to think through the sort of where we are today is we've got these coding agents which sort of work for some tasks. They're not perfect, but there are certain um I think we have a clear line of sight between where we are today and like improvements over the next 3, 6, and 12 months. They're going to have quite stark consequences for software engineering, I think. And if you think that through like what does that mean for startups and and um the tech world in general and then even beyond that, what does it mean for other kind of knowledge work, doctors, lawyers, accountants? Perhaps we'll come to that.
But but for now, let's stick with the kind of the central idea that we've kind of invented automation of software engineering. May maybe you should walk us through kind of how you got to this conclusion because it's not just you pontificating. You like use these tools.
Yeah. And uh came to this conclusion organically. Maybe tell us about that.
Yeah, totally. So in our job uh as you know Dave like we talked to a lot of startup founders who are building stuff every day and we both built products that a lot of people have used and honestly I kind of missed that um that process of building of launching something. If I was going to give advice to these founders every day I felt like I should at least be using some of these tools to figure out like what was going on in the world. And so about 2 months ago now, I started with no code tools like lovable and replet to build just like a couple of little games like a my favorite word game when I was a kid I rebuilt and honestly I was pretty shocked at how good they'd gotten. You know, I tried it six or nine months ago.
They weren't that good. But this time around, I built the game and then I I moved on to tools like um Cursor and Windsurf and Claude Code. My blog, tomblonfield.com, get the plug in there, has been on Tumblr for like 20 years or something. And so the next project was to like rebuild my blog, which I did in 90 minutes on a train journey with Claude Code. And in 90 minutes, I set up hosting, I wrote new blogging software, and I migrated like 15 years of blog posts over to the new platform. And I was kind of astonished. And then I went even further and I built recipes.ai. Got to get the plugin for that as well. You couldn't afford the I couldn't. No. And that turned into like more of a serious project. You know, it's now like 35,000 lines of code.
There are thousands of people using the site. It has a full interactive voice agent. This is not a it's not a simple CRUD app. It is a an interactive voice agent. And just to be clear, like you built this in the vibe coding mode where you literally wrote zero lines of those code. 35,000 lines and I wrote not a single one. And honestly, after about the first 5,000 lines, I stopped even reading the code. you know, I just like prompt, I'd auto accept, I'd go and like make a coffee and I'd come back and a new feature was built. And again, it wasn't perfect. There are still rough edges. I used to be a professional software developer. I know like I do know how to write code and how to architect projects. But with that little bit of knowledge, I became extremely dangerous. You know, I've not written code professionally for probably 10 years. these new tools made me 10 times more powerful, more productive than I was when I was kind of current in in you know software engineering 10 years ago.
I kind of started thinking like what happens when other software engineers start start using these tools and many of them already are and what happens when semi-technical people start using them and what happens when nontechnical people start using them and that's kind of what I want to uh spend some of the time talking about today. Have you seen companies in in your group using these tools yet? Yes, I would say it maybe like a third to a half of the companies would say that they pretty much primarily write code in this style. Um, which is pretty profound, right? Last batch that number was 25% of companies said they they use these tools for most of their code. Two batches ago, it was approximately 0%. Yeah. So, what what data point do we have in the last 6 months? uh at least in terms of usage by YC founders which you could argue are at the frontier of this development admittedly smaller code bases probably less legacy code but but like the people are adopting these tools and actually using them which implies that they are getting better and I think anecdotally we see that they are getting a lot better totally and so this is kind of this is the thought process that led to to that provocative tweet and the responses were kind of twofold I guess one was basically like you're a on AI is never going to be good enough to do this. Just like impossible maybe for your toy app but not for a professional code base to happen. Yeah. Today it's not good enough but combined with I think better tool calling better u understanding how to use these tools plus the underlying models getting better. The argument that these tools are never going to be good enough I think is just a losing proposition. I agree like if you just look at the rate of growth of of capability here, you would have to claim that it's going to stop getting better right now and humans will not figure out better uh form factors to use the existing models. And so like that's a pretty tenuous argument in my opinion to make. I think it will get good enough to write any code. I totally agree. And it really if you look at the history of any great product Klay Christensen innovators dilemma the idea they always start looking like toys right yes they're dismissed by the big incumbents or it doesn't do x y and z but it does this small thing like really very capably and then the rate of improvement is such that pretty quickly overtakes the incumbents and I think that's exactly what's happening I mean honestly like personally when I heard of founders doing this I'm like uh maybe they're not the good founders but over time like the good founders are doing it so like that isn't just another data point that think this wave is coming.
Okay, so that was the first response to this tweet like you're a the AI is not good enough. The second response was uh more sophisticated and it went something along the lines of you're a Uh Jivvon's paradox means that as the cost of providing this software comes down, the demand will increase even further. Uh and basically the overall uh market for software will as electricity gets cheaper, humans use far more electricity than the cost savings.
Absolutely. And so the dem the overall demand for electricity goes up in dollar terms, not just kilowatt hours or whatever. And I basically agree with that as well. But my counterargument is that it won't be humans meeting that demand, right? Like I could easily see the demand goes up 10x or 100x. Who knows? But I just think the AI is getting so good that you just won't have humans fulfilling that demand in anything but the most niche of niche cases. Going back to the combine harvester, it I don't know what the exact numbers were. It probably resulted in a 10x increase in food productivity, but like a thousandx reduction in the number of humans like per per kilogjle of food produced or or whatever metric you want. I think it's more pronounced in software actually. I think the the increase in demand will be higher but the amount that can be automated by the AI will be yeah like a a counterargument to that might be unlike food food there's a certain amount of food humans can eat and there's value beyond that is like not useful um in software you could argue there is an unlimited demand for software if the capability and the cost of creating software is cheap enough uh we will have apps that do every possible thing you could ever imagine and I think that the future is closer to that than a limited demand world. But if the productivity per person goes up higher than that, we will still have fewer software engineers as we know them today. I agree. I don't think it's even productivity per person because I think the person just goes to zero and you're dividing by zero, right? It's like infinity. Yeah. And so I don't believe the demand for software is truly unlimited. I don't think it's infinite but it's very very large. I would agree with that. And I think that um we're perhaps moving to a future of a kind of ondemand custom software. So you as a person interact with you come to chat GPT with a problem and it spins up a little piece of code to help you solve the problem. It's like an ephemeral program with a user interface just designed for you and that problem you solve your problem it kind of goes away into ether. I absolutely could see that happening. But the conclusion of all of that I think is that software engineering jobs of today I think will not exist in five or 10 years. I think there will be demand for smart people who know how to wrangle these AI coding machines and if we want to call those people software engineers like so be it.
But I think the job is dramatically dramatically different. I think what's interesting here people have strong reactions when they think oh the job that I do or my friends do u might go away. It's a very scary proposition, but if you look backwards at history, the first computer programmers that existed, um, they didn't do a job that was anywhere like today's software engineers, right? They were writing machine code. They were like making punch cards. Then we abstracted, we built better tools that abstracted the work away from the machine level. Um, and we got used to those tools, right? Object-oriented programming languages, uh, all these other tooling around, uh, writing code. And so you could argue that this new wave of AI is just another abstraction that allows the human to be a higher level agent rather than the person actually writing the code. Are there areas where humans truly have the monopoly on this ability? Some people have suggested is is agency. Figuring out what problems to solve? Is that a uniquely human characteristic? Is it taste? You need a human to really figure out if this is good or not good. I mean I don't know what your view on that is.
I have a few thoughts. One is if you look at the best software that you use in your life, very likely there is a single human being behind that team that built that and that person obsesses over making that product excellent for the user. And in this world of, you know, if we project forward this world where there's just swarms of AI agents circling the globe trying to find like good ideas and good problems to solve, who will have that obsession and or or how do you program an AI to be obsessed with solving that problem? I think that it's not impossible that that world could exist, but I feel like that is a big stretch and I don't know of current methodologies to get the AI there yet. I I think I agree with you in the in the short to medium term, these tools give high agency individuals superpowers. So if you are a potential founder thinking about starting something, I don't think there's been any point in history that's been better than today for starting an idea because you can just do so much more than you would have been able to even last year. So getting to a million, 10 million, 100 million of revenue with a software idea had is just happening faster and faster than ever. So right now I think is the is an excellent time to be a founder and you can do so with with less capital. People are getting to profitability. Maybe you raise a seed round. you might not need a series A or series B. And so I think for today it's a really exciting time but trying to forecast a future five or 10 years out is hard. I want to move on from software engineers and coding tools to knowledge work more broadly. Sure. How have you seen these kind of tools impact things like lawyers or doctors or accountants? Yeah, I mean we certainly see founders building tools to solve problems in these domains. And I think what we've seen at least um in the last maybe two years at YC I think these ideas started as kind of fringe maybe you could do that but oh it would really destroy the business model of that industry so it probably won't happen to now today like we see plenty of examples of these companies succeeding and actually being used in these industries. Do you have any example companies you want to talk about? Lora is a is a a very obvious one. Um so a Swedish team that did YC probably 18 or 24 months ago now. The sort of received wisdom in in tech circles was lawyers never buy software.
Yes. And as you sort of suggested, lawyers build by the hour. And so anything that makes them more efficient actually is is I don't need more efficiency. I I'll get paid less. Why would I want that? But I think basically every industry in the world has figured out is probably the wrong word, but is worried about the impact of AI. And so every set of investors is asking the board and the company CEO and every board member is asking the senior management of every company what is AI going to do to our business and they're all looking for answers. I think it's becoming just a table stakes requirement uh to compete in a market. So would you hire the lawyer that doesn't use a computer? Of course not. Right? Oh, this person doesn't use email. Like no way.
I'm not going to hire them. And I think we're now getting to the point in legal, in finance, in all these other areas where it's become a competitive disadvantage if you don't embrace it. So I think it will become default. Yeah, I I agree with that. I think probably and I'm not deeply involved in law or finance or or medicine. I'm not sure that's yet true. Like I'm not sure it's yet a competitive disadvantage, but I can imagine that becoming true in the next year or two as your tools get really really good. And so what the implications of that basically knowledge work the cost of knowledge work comes down and down and down becomes ubiquitous. In one sense it's a huge consumer surplus like we all I was going to say I I don't feel like that's scary.
I feel like that's awesome. We're going to have a way better world. The only problem is some roles that people play today are going to need to change. I think there are certain jobs that are protected clearly anything that involves physical work. So surgeons probably in better shape or brick layers or plumbers or electricians and a lot of those industries that are at risk. I can imagine them putting up barriers, right? Like kind of you must have a doctor to prescribe drugs. We're not going to let the AI prescribe drugs. Even when the AI is provably better at prescribing drugs, we see example of this today, right? Self-driving cars, they are provably safer than human drivers. And yet it's still a regulatory disaster to try to get them deployed. Totally. And so I can see that happening in in law, in medicine as these kind of trade bodies act as as gatekeepers to try and almost like protectionist unions trying to protect the jobs of their of their members. Yeah. I think the thing that makes me feel positive and optimistic about the future is if you just look at each step along this progression and you had to choose as an individual, do I want to live in this world or the world one click further into the future? I think in all cases the world and your experience and what you can do with your life is going to be better in the next click forward. It has been true for all of humanity and so you would have to believe that now is this like discontinuity point where all of this is going to fundamentally change and I just don't think that's the case. I agree with you on that. I mean you're talking a kind of a future of abundance. Biggest worry for me is that transition period going from and it might happen really fast. I guess that's the part that's unique or new about this. Absolutely.
And you could see hundreds of millions of people displaced and the idea that they're going to retrain as in a different job I think is going to be extremely painful. And I can see the societal like impact and turmoil being very very grave for 10 or 20 years as that as that transition happens. Of course, I would love to live in a future where all disease is cured and I think humanity will figure out new ways to derive purpose from life. Let's bring it back to today. like for a founder who's, you know, thinking about what to do or or a future founder thinking about what to do, what do you think they should do? Are there different skills they should get? Are there different experiences they should try to seek? Like what, you know, if you were a 20-year-old today, what would you be doing? The first thing I would do, and I'm encouraging all of my friends to do this, is just um to stay up to date with the latest tools.
They might not be perfect for your industry yet, but I'm betting a lot of money that at some point they will cross that tipping point and they will be extremely useful. And if you are one of these people who are at the cutting edge of this these tools, I think you have an advantage for several years which will persist and and enable you to to frankly to earn a lot of money to grow a great career. I agree with what you said. I think the other piece is just get good at identifying human problems to go solve cuz at the core of all of this like every B2B SAS company that exists exists ultimately to give a human individual a better experience in something right all the B2B companies serve ultimately some consumer company that serves humans. So if you overindex and get really good at just understanding people and seeing problems, figuring out how you talk to people to understand what their problems actually are, I think that skill relative to all the other skills needed to be a good founder is going to be the one that is more important in this future where it's pretty easy to build stuff. Yeah. If we think kind of short term, one of the things that I'm most excited about is with AI tools to write software, software teams can be smaller.
So a team of two or three or four engineers can build stuff that would maybe a couple years ago take 40 engineers. And one of the second order effects of that that I'm excited about is I think design of the products that we use, the quality of the products that we use is going to go way up. Because if you look at bad design or bad experiences that you encounter in your life, I think a lot of it comes from interfaces between people or between teams where like ownership isn't clear like am I supposed to make this really fast or is that some other team's job? I think all that will kind of go away and uh one person or a very small group of people can really be the owners of a high quality experience and I'm just like pumped to use those products. I totally agree with you. I genuinely do believe right now and probably the next 5 years is the best time in the history of humanity to build something from scratch. There is just so many ideas that have been cracked open by AI. so many industries like law or education or medicine that really were not big buyers of software in the past that are going to be transformed in the next five years. And so I think there's no more exciting time to to build a company than right now. I agree. Thanks, Tom. See you guys on the next episode. See you soon.